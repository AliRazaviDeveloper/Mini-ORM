<?php

namespace unit;

use App\Database\PDODatabaseConnection;
use App\Database\PDOQueryBuilder;
use App\Exception\ConfigNotFoundException;
use App\Helper\Config;
use PHPUnit\Framework\TestCase;

class PDOQueryBuilderTest extends TestCase
{
    protected $queryBuilder;
    protected function setUp(): void
    {
        $config=$this->getConfig();
        $pdoConnection=new PDODatabaseConnection($config);
        $this->queryBuilder=new PDOQueryBuilder($pdoConnection->connection());
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testShouldBeCreateData()
    {
        $result=$this->insertData();
        $this->assertIsInt($result);
        $this->greaterThan(0,$result);
    }

    public function testShouldBeUpdateData()
    {
        $this->insertData();
       $result= $this->queryBuilder->table("bugs")->
        where("name","Ali Razavi")->
        where("email","ali@gmail.com")->
        update(["title"=>"new title","email"=>"alirazavi@53@gmail.com"]);
        $this->assertIsInt($result);
        $this->assertEquals(1,$result);

    }

    /**
     * @throws ConfigNotFoundException
     */
    private function getConfig(){
        return Config::get("database","pdo_testing");
    }
    private function insertData(){
        $config=$this->getConfig();
        $pdoConnection=new PDODatabaseConnection($config);
        $this->queryBuilder=new PDOQueryBuilder($pdoConnection->connection());


        $data=[
            "title"=>"bug report title" ,
            "link"=> "https://dummy.com",
            "name"=>"Ali Razavi",
            "email"=>"ali@gmail.com"
        ];
        return $this->queryBuilder->table("bugs")->create($data);
    }

    protected function tearDown(): void
    {
        $this->queryBuilder->trancateAll();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}